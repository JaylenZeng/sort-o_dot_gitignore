dot_gitignore : David Chen, Jaylen Zeng, Yat Long Chan
APCS pd7
L04: Never Fear, Big O is Here!
2022-01-07

DISCO
- remove all constants to put a fxn into big O notation
- f(n) for bubble/insertion sort best case = n-1 which we can write in big O notation as O(n).
- f(n) for bubble/insertion worst case = (n^2-n)/2 which we can write in big O notation as O(n^2).
- Insertion sort has a slightly faster average case than the others
QCC
- Are there any more efficient sorting algorithms?
- How do we use each algorithm?
- 


BUB-QA
q0: If a pass requires no swaps, what do you know?
a0: That the list is sorted
q1: After pass p, what do you know?
a1: We know that the first p elements are sorted and in the right place
q2: How many passes are necessary to completely sort?
a2: The length of the array - 1 for the worst case (elements were in descending order)

SEL-QA
q0: How many passes to sort n elements?
a0: n-1 passes
q1: What do you know after pass p?
a1: p elements are correctly sorted
q2: How do you know if sorted?
a2: When n-1 passes are completed
q3: What does a pass boil down to?
a3: swapping most extreme element in array with end index.

INS-QA
q0: How many passes to sort n elements?
a0: n-1 passes
q1: What do you know after pass p?
a1: p elements are sorted
q2: How will you know when sorted?
a2: When partition equals array size
q3: What constitues a pass?
a3: Once you swapped a number to its correct place
q4: What must you track?
a4: the index of the element that you are moving
